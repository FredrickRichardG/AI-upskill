<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-failsafe-plugin/xsd/failsafe-test-report-3.0.xsd" version="3.0" name="com.example.userroleservice.controller.UserControllerIntegrationTest" time="14.873" tests="6" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\fredrick.gnanaraj\training projects\source\user role module\target\test-classes;C:\Users\fredrick.gnanaraj\training projects\source\user role module\target\classes;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.3\spring-boot-starter-web-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.3\spring-boot-starter-json-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.3\spring-boot-starter-tomcat-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.19\tomcat-embed-core-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.19\tomcat-embed-websocket-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-web\6.1.4\spring-web-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-webmvc\6.1.4\spring-webmvc-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.3\spring-boot-starter-data-jpa-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.3\spring-boot-starter-aop-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-jpa\3.2.3\spring-data-jpa-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-commons\3.2.3\spring-data-commons-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-orm\6.1.4\spring-orm-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-tx\6.1.4\spring-tx-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-aspects\6.1.4\spring-aspects-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.3\spring-boot-starter-security-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-config\6.2.2\spring-security-config-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-web\6.2.2\spring-security-web-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-config\4.1.0\spring-cloud-starter-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.0\spring-cloud-starter-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.0\spring-cloud-context-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-rsa\1.1.1\spring-security-rsa-1.1.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.74\bcprov-jdk18on-1.74.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-config-client\4.1.0\spring-cloud-config-client-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.0\spring-cloud-starter-vault-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.3\httpclient5-5.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.4\httpcore5-h2-5.2.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.4\httpcore5-5.2.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.0\spring-cloud-vault-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\vault\spring-vault-core\3.1.0\spring-vault-core-3.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.3.0\springdoc-openapi-starter-webmvc-ui-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.3.0\springdoc-openapi-starter-webmvc-api-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.3.0\springdoc-openapi-starter-common-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.19\swagger-core-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.19\swagger-annotations-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.19\swagger-models-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\webjars\swagger-ui\5.10.3\swagger-ui-5.10.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-test\6.2.2\spring-security-test-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-core\6.2.2\spring-security-core-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-crypto\6.2.2\spring-security-crypto-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.2.3\spring-boot-starter-oauth2-resource-server-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.2.2\spring-security-oauth2-resource-server-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.2.2\spring-security-oauth2-core-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.2.2\spring-security-oauth2-jose-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.24.4\nimbus-jose-jwt-9.24.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-cache\3.2.3\spring-boot-starter-cache-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-context-support\6.1.4\spring-context-support-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.2.3\spring-boot-starter-data-redis-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\lettuce\lettuce-core\6.3.1.RELEASE\lettuce-core-6.3.1.RELEASE.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-common\4.1.107.Final\netty-common-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-handler\4.1.107.Final\netty-handler-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-resolver\4.1.107.Final\netty-resolver-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-buffer\4.1.107.Final\netty-buffer-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.107.Final\netty-transport-native-unix-common-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-codec\4.1.107.Final\netty-codec-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-transport\4.1.107.Final\netty-transport-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\projectreactor\reactor-core\3.6.3\reactor-core-3.6.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-redis\3.2.3\spring-data-redis-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-keyvalue\3.2.3\spring-data-keyvalue-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-oxm\6.1.4\spring-oxm-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\it\ozimov\embedded-redis\0.7.2\embedded-redis-0.7.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\google\guava\guava\21.0\guava-21.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-io\commons-io\2.5\commons-io-2.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-openfeign\4.1.0\spring-cloud-starter-openfeign-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-openfeign-core\4.1.0\spring-cloud-openfeign-core-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\form\feign-form-spring\3.8.0\feign-form-spring-3.8.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\form\feign-form\3.8.0\feign-form-3.8.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.0\spring-cloud-commons-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\feign-core\13.1\feign-core-13.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\feign-slf4j\13.1\feign-slf4j-13.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-consul-discovery\4.1.0\spring-cloud-starter-consul-discovery-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-consul\4.1.0\spring-cloud-starter-consul-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-consul-core\4.1.0\spring-cloud-consul-core-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\ecwid\consul\consul-api\1.4.5\consul-api-1.4.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-consul-discovery\4.1.0\spring-cloud-consul-discovery-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-loadbalancer\4.1.0\spring-cloud-starter-loadbalancer-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-loadbalancer\4.1.0\spring-cloud-loadbalancer-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.1\reactor-extra-3.5.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\stoyanr\evictor\1.0.0\evictor-1.0.0.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
    <property name="sun.java.command" value="C:\Users\fredrick.gnanaraj\AppData\Local\Temp\surefire676572355820373457\surefirebooter-20250606121709520_3.jar C:\Users\fredrick.gnanaraj\AppData\Local\Temp\surefire676572355820373457 2025-06-06T12-17-09_354-jvmRun1 surefire-20250606121709520_1tmp surefire_0-20250606121709520_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\fredrick.gnanaraj\training projects\source\user role module\target\test-classes;C:\Users\fredrick.gnanaraj\training projects\source\user role module\target\classes;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.3\spring-boot-starter-web-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.3\spring-boot-starter-json-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.3\spring-boot-starter-tomcat-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.19\tomcat-embed-core-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.19\tomcat-embed-websocket-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-web\6.1.4\spring-web-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-webmvc\6.1.4\spring-webmvc-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.3\spring-boot-starter-data-jpa-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.3\spring-boot-starter-aop-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-jpa\3.2.3\spring-data-jpa-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-commons\3.2.3\spring-data-commons-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-orm\6.1.4\spring-orm-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-tx\6.1.4\spring-tx-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-aspects\6.1.4\spring-aspects-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.3\spring-boot-starter-security-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-config\6.2.2\spring-security-config-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-web\6.2.2\spring-security-web-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-config\4.1.0\spring-cloud-starter-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.0\spring-cloud-starter-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.0\spring-cloud-context-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-rsa\1.1.1\spring-security-rsa-1.1.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.74\bcprov-jdk18on-1.74.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-config-client\4.1.0\spring-cloud-config-client-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.0\spring-cloud-starter-vault-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.3\httpclient5-5.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.4\httpcore5-h2-5.2.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.4\httpcore5-5.2.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.0\spring-cloud-vault-config-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\vault\spring-vault-core\3.1.0\spring-vault-core-3.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.3.0\springdoc-openapi-starter-webmvc-ui-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.3.0\springdoc-openapi-starter-webmvc-api-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.3.0\springdoc-openapi-starter-common-2.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.19\swagger-core-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.19\swagger-annotations-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.19\swagger-models-jakarta-2.2.19.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\webjars\swagger-ui\5.10.3\swagger-ui-5.10.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-test\6.2.2\spring-security-test-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-core\6.2.2\spring-security-core-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-crypto\6.2.2\spring-security-crypto-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.2.3\spring-boot-starter-oauth2-resource-server-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.2.2\spring-security-oauth2-resource-server-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.2.2\spring-security-oauth2-core-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.2.2\spring-security-oauth2-jose-6.2.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.24.4\nimbus-jose-jwt-9.24.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-cache\3.2.3\spring-boot-starter-cache-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-context-support\6.1.4\spring-context-support-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.2.3\spring-boot-starter-data-redis-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\lettuce\lettuce-core\6.3.1.RELEASE\lettuce-core-6.3.1.RELEASE.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-common\4.1.107.Final\netty-common-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-handler\4.1.107.Final\netty-handler-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-resolver\4.1.107.Final\netty-resolver-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-buffer\4.1.107.Final\netty-buffer-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.107.Final\netty-transport-native-unix-common-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-codec\4.1.107.Final\netty-codec-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\netty\netty-transport\4.1.107.Final\netty-transport-4.1.107.Final.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\projectreactor\reactor-core\3.6.3\reactor-core-3.6.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-redis\3.2.3\spring-data-redis-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\data\spring-data-keyvalue\3.2.3\spring-data-keyvalue-3.2.3.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\spring-oxm\6.1.4\spring-oxm-6.1.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\it\ozimov\embedded-redis\0.7.2\embedded-redis-0.7.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\google\guava\guava\21.0\guava-21.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-io\commons-io\2.5\commons-io-2.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-openfeign\4.1.0\spring-cloud-starter-openfeign-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-openfeign-core\4.1.0\spring-cloud-openfeign-core-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\form\feign-form-spring\3.8.0\feign-form-spring-3.8.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\form\feign-form\3.8.0\feign-form-3.8.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.0\spring-cloud-commons-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\feign-core\13.1\feign-core-13.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\github\openfeign\feign-slf4j\13.1\feign-slf4j-13.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-consul-discovery\4.1.0\spring-cloud-starter-consul-discovery-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-consul\4.1.0\spring-cloud-starter-consul-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-consul-core\4.1.0\spring-cloud-consul-core-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\ecwid\consul\consul-api\1.4.5\consul-api-1.4.5.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\fredrick.gnanaraj\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-consul-discovery\4.1.0\spring-cloud-consul-discovery-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-starter-loadbalancer\4.1.0\spring-cloud-starter-loadbalancer-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\org\springframework\cloud\spring-cloud-loadbalancer\4.1.0\spring-cloud-loadbalancer-4.1.0.jar;C:\Users\fredrick.gnanaraj\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.1\reactor-extra-3.5.1.jar;C:\Users\fredrick.gnanaraj\.m2\repository\com\stoyanr\evictor\1.0.0\evictor-1.0.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\fredrick.gnanaraj"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\fredrick.gnanaraj\training projects\source\user role module"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\fredrick.gnanaraj\AppData\Local\Temp\surefire676572355820373457\surefirebooter-20250606121709520_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.7+8-LTS-245"/>
    <property name="user.name" value="fredrick.gnanaraj"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\fredrick.gnanaraj\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\FREDRI~1.GNA\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="C:\Users\fredrick.gnanaraj\training projects\source\user role module"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="16320"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\fredrick.gnanaraj\software\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin;C:\Users\fredrick.gnanaraj\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\fredrick.gnanaraj\AppData\Local\Programs\Python\Python313\;C:\Users\fredrick.gnanaraj\AppData\Local\Microsoft\WindowsApps;C:\Users\fredrick.gnanaraj\AppData\Roaming\npm;C:\Users\fredrick.gnanaraj\AppData\Local\Programs\Git\cmd;C:\Users\fredrick.gnanaraj\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\fredrick.gnanaraj\software\apache-maven-3.9.9-bin\apache-maven-3.9.9;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.7+8-LTS-245"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[user-service] "/>
  </properties>
  <testcase name="createRole_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="1.504">
    <system-out><![CDATA[12:17:10.756 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.userroleservice.controller.UserControllerIntegrationTest]: UserControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:17:10.960 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.userroleservice.UserRoleServiceApplication for test class com.example.userroleservice.controller.UserControllerIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2025-06-06T12:17:13.898+05:30  INFO 16320 --- [user-service] [           main] c.e.u.c.UserControllerIntegrationTest    : Starting UserControllerIntegrationTest using Java 21.0.7 with PID 16320 (started by fredrick.gnanaraj in C:\Users\fredrick.gnanaraj\training projects\source\user role module)
2025-06-06T12:17:13.901+05:30  INFO 16320 --- [user-service] [           main] c.e.u.c.UserControllerIntegrationTest    : The following 1 profile is active: "test"
2025-06-06T12:17:13.936+05:30  INFO 16320 --- [user-service] [           main] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=user-service, profiles=[default], label=null, version=bf2a1eda17a583e7e3474a9ccf3c8b18ec8796d3, state=
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.v.c.e.LeaseAwareVaultPropertySource  : Vault location [secret/user-service/test] not resolvable: Not found
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.v.c.e.LeaseAwareVaultPropertySource  : Vault location [secret/application/test] not resolvable: Not found
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.v.c.e.LeaseAwareVaultPropertySource  : Vault location [secret/application] not resolvable: Not found
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888
2025-06-06T12:17:13.937+05:30  INFO 16320 --- [user-service] [           main] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=user-service, profiles=[test], label=null, version=bf2a1eda17a583e7e3474a9ccf3c8b18ec8796d3, state=
2025-06-06T12:17:15.504+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-06T12:17:15.507+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-06T12:17:15.791+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 269 ms. Found 2 JPA repository interfaces.
2025-06-06T12:17:15.828+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-06T12:17:15.830+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-06T12:17:15.868+05:30  INFO 16320 --- [user-service] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.userroleservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-06T12:17:15.869+05:30  INFO 16320 --- [user-service] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.userroleservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-06T12:17:15.869+05:30  INFO 16320 --- [user-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-06-06T12:17:16.431+05:30  INFO 16320 --- [user-service] [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=70ee98dc-6cff-31a2-879b-ed1a6fc6697d
2025-06-06T12:17:16.780+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-06-06T12:17:16.784+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.786+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.798+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.800+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.801+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000237995fc4c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.803+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.812+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.821+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.824+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.826+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.836+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.845+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.846+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.848+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.849+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:16.850+05:30  WARN 16320 --- [user-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-06T12:17:17.098+05:30  INFO 16320 --- [user-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-06T12:17:17.262+05:30  INFO 16320 --- [user-service] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-06-06T12:17:17.336+05:30  INFO 16320 --- [user-service] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-06T12:17:17.655+05:30  INFO 16320 --- [user-service] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-06T12:17:17.677+05:30  INFO 16320 --- [user-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-06T12:17:17.839+05:30  INFO 16320 --- [user-service] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-06-06T12:17:17.841+05:30  INFO 16320 --- [user-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-06T12:17:17.863+05:30  WARN 16320 --- [user-service] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-06T12:17:19.004+05:30  INFO 16320 --- [user-service] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-06T12:17:19.024+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    drop table if exists roles cascade 
Hibernate: 
    drop table if exists roles cascade 
2025-06-06T12:17:19.031+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists user_roles cascade 
2025-06-06T12:17:19.031+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-06-06T12:17:19.039+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    create table roles (
        created timestamp(6) not null,
        id bigint generated by default as identity,
        row_version bigint,
        updated timestamp(6),
        created_by varchar(255) not null,
        description varchar(255),
        name varchar(255) not null unique,
        updated_by varchar(255),
        primary key (id)
    )
Hibernate: 
    create table roles (
        created timestamp(6) not null,
        id bigint generated by default as identity,
        row_version bigint,
        updated timestamp(6),
        created_by varchar(255) not null,
        description varchar(255),
        name varchar(255) not null unique,
        updated_by varchar(255),
        primary key (id)
    )
2025-06-06T12:17:19.054+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    )
2025-06-06T12:17:19.056+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    create table users (
        active boolean not null,
        created timestamp(6) not null,
        id bigint generated by default as identity,
        row_version bigint,
        updated timestamp(6),
        created_by varchar(255) not null,
        email varchar(255) not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255) not null,
        updated_by varchar(255),
        username varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table users (
        active boolean not null,
        created timestamp(6) not null,
        id bigint generated by default as identity,
        row_version bigint,
        updated timestamp(6),
        created_by varchar(255) not null,
        email varchar(255) not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255) not null,
        updated_by varchar(255),
        username varchar(255) not null unique,
        primary key (id)
    )
2025-06-06T12:17:19.060+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    alter table if exists user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles
Hibernate: 
    alter table if exists user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles
2025-06-06T12:17:19.072+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-06-06T12:17:19.081+05:30  INFO 16320 --- [user-service] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-06T12:17:20.932+05:30  WARN 16320 --- [user-service] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-06T12:17:21.725+05:30  INFO 16320 --- [user-service] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a5df070, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1070308e, org.springframework.security.web.context.SecurityContextHolderFilter@45070db0, org.springframework.security.web.header.HeaderWriterFilter@264e0b8e, org.springframework.web.filter.CorsFilter@6eb8fd79, org.springframework.security.web.authentication.logout.LogoutFilter@5bc3c4e5, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@29fae990, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a9ccbfb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6162d87c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59b78925, org.springframework.security.web.access.ExceptionTranslationFilter@74239871, org.springframework.security.web.access.intercept.AuthorizationFilter@106277d6]
2025-06-06T12:17:22.698+05:30  INFO 16320 --- [user-service] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-06-06T12:17:22.699+05:30  INFO 16320 --- [user-service] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-06-06T12:17:22.701+05:30  INFO 16320 --- [user-service] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-06-06T12:17:23.157+05:30  WARN 16320 --- [user-service] [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-06T12:17:23.287+05:30  INFO 16320 --- [user-service] [           main] c.e.u.c.UserControllerIntegrationTest    : Started UserControllerIntegrationTest in 12.186 seconds (process running for 13.538)
2025-06-06T12:17:24.139+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:24.161+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:24.216+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.233+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.352+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id 
    from
        roles r1_0 
    where
        r1_0.name=? 
    fetch
        first ? rows only
Hibernate: 
    select
        r1_0.id 
    from
        roles r1_0 
    where
        r1_0.name=? 
    fetch
        first ? rows only
2025-06-06T12:17:24.354+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\fredrick.gnanaraj\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="getAllUsers_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="0.037">
    <system-out><![CDATA[2025-06-06T12:17:24.848+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:24.850+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:24.851+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.853+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.858+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
]]></system-out>
  </testcase>
  <testcase name="createUser_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="0.157">
    <system-out><![CDATA[2025-06-06T12:17:24.887+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:24.892+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:24.894+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.896+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:24.926+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-06-06T12:17:24.929+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-06-06T12:17:25.025+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0 
    where
        r1_0.id in (?)
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0 
    where
        r1_0.id in (?)
2025-06-06T12:17:25.026+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="getUserById_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="0.043">
    <system-out><![CDATA[2025-06-06T12:17:25.043+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:25.046+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:25.049+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.050+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="deleteUser_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="0.337">
    <system-out><![CDATA[2025-06-06T12:17:25.086+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:25.088+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:25.089+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.095+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.382+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="assignRoles_Success" classname="com.example.userroleservice.controller.UserControllerIntegrationTest" time="0.025">
    <system-out><![CDATA[2025-06-06T12:17:25.424+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created,
        u1_0.created_by,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.row_version,
        u1_0.updated,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-06-06T12:17:25.427+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0
2025-06-06T12:17:25.428+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.429+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (active, created, created_by, email, first_name, last_name, password, row_version, updated, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.430+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        roles
        (created, created_by, description, name, row_version, updated, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-06T12:17:25.437+05:30 DEBUG 16320 --- [user-service] [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0 
    where
        r1_0.id in (?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.created,
        r1_0.created_by,
        r1_0.description,
        r1_0.name,
        r1_0.row_version,
        r1_0.updated,
        r1_0.updated_by 
    from
        roles r1_0 
    where
        r1_0.id in (?, ?)
]]></system-out>
  </testcase>
</testsuite>